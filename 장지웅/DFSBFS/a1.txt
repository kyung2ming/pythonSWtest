2차원 배열관련 -> DFS,BFS
DFS인지 BFS인지 파악
(한 정점씩 끝까지가면 DFS, 점차 넓어지면 BFS)
BFS -> 큐 이용(deque 라이브러리)
우선 모델링, 3x3 배열로 원리파악

아이디어 -> bfs를 단계(result)별로 진행,
현재 단계의 count(1)값이 이전 단계와 같다면 종료, -> -1이 고정이므로 sum 가능
서칭시 0이 존재하면 -1 리턴 아니면 result-1 리턴

정답 -> 
최초로 익은 토마토의 위치를 큐
pop과 동시에 4방향으로 진행 후 위치를 큐, -1이거나 이미 큐 되었으면 패스, result += 1
큐가 모두 사라질때 result 리턴, 이후 박스에 0이 있으면 -1 리턴

생각 -> 아이디어는 쉬운 편, DFS, BFS틀을 외우는게 중요
시간복잡도 -> O(V^2), 파이썬에서 인접리스트 쓰기 힘듦(객체 이용)